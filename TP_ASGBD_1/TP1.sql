
/*==============================================================*/
/* SCRIPT : TP ORACLE                                           */
/*==============================================================*/

connect SYSTEM/pwd

DROP USER DBHOPITAL CASCADE;

--1)
/*
DROP TABLESPACE tablespace [ INCLUDING CONTENTS [ {AND | KEEP} DATAFILES ] [ CASCADE CONSTRAINTS ] ] ; 
SQL> ALTER TABLESPACE data OFFLINE;	
SQL> DROP TABLESPACE data;	
SQL> DROP TABLESPACE data INCLUDING CONTENTS; 	
SQL> DROP TABLESPACE data INCLUDING CONTENTS CASCADE CONSTRAINTS;	
SQL> DROP TABLESPACE data INCLUDING CONTENTS AND DATAFILES CASCADE CONSTRAINTS;
*/
DROP TABLESPACE HOPITAL_TBS INCLUDING CONTENTS AND DATAFILES CASCADE CONSTRAINTS;

CREATE TABLESPACE HOPITAL_TBS
DATAFILE 'C:\Users\Moflawer\Desktop\Dol_Gul_Dur\WorkShop_Tree\SQL\Almost_Done\TP_ASGBD\TP_ASGBD_1\htbs_datafile.dat'
SIZE 100M AUTOEXTEND ON;

DROP TABLESPACE HOPITAL_TempTBS INCLUDING CONTENTS AND DATAFILES CASCADE CONSTRAINTS;

CREATE TEMPORARY TABLESPACE HOPITAL_TempTBS
TEMPFILE 'C:\Users\Moflawer\Desktop\Dol_Gul_Dur\WorkShop_Tree\SQL\Almost_Done\TP_ASGBD\TP_ASGBD_1\htbs_tempfile.dat'
SIZE 100M AUTOEXTEND ON;

--2)
CREATE USER DBHOPITAL 
IDENTIFIED BY pwd
DEFAULT TABLESPACE HOPITAL_TBS
TEMPORARY TABLESPACE HOPITAL_TempTBS;

--3)
GRANT ALL PRIVILEGES TO DBHOPITAL;

--4)
/*
SERVICE (CODE-SERVICE, NOM-SERVICE, BATIMENT, DIRECTEUR*)
CHAMBRE (CODE-SERVICE*, NUM-CHAMBRE, SURVEILLANT*, NB_LITS)
EMPLOYE (NUM- EMP, NOM-EMP, PRENOM-EMP, ADRESSE-EMP, TEL-EMP)
MEDECIN (NUM- MED*, SPECIALITE)
INFIRMIER (NUM-INF*, CODE_SERVICE*, ROTATION, SALAIRE)
PATIENT (NUM-PATIENT, NOM-PATIENT, PRENOM-PATIENT, ADRESSE-PATIENT, TEL-PATIENT, MUTUELLE)
HOSPITALISATION (NUM-PATIENT*,  CODE_SERVICE*, NUM_CHAMBRE*, LIT)
SOIGNE (NUM-PATIENT*, NUM-MED*)
*/

--5)
connect DBHOPITAL/pwd;


CREATE TABLE EMPLOYE (
	NUM_EMP		 INTEGER,
	NOM_EMP		 VARCHAR2(50),
	PRENOM_EMP	 VARCHAR2(50),
	ADRESSE_EMP	 VARCHAR2(120),
	TEL_EMP		 VARCHAR2(20),
	CONSTRAINT PK_NUM_EMP PRIMARY KEY (NUM_EMP)
);

CREATE TABLE PATIENT (
	NUM_PATIENT	 INTEGER,
	NOM_PATIENT		 VARCHAR2(50),
	PRENOM_PATIENT	 VARCHAR2(50),
	ADRESSE_PATIENT	 VARCHAR2(120),
	TEL_PATIENT		 VARCHAR2(20),
	MUTUELLE 		 VARCHAR2(10),
	CONSTRAINT PK_NUM_PATIENT PRIMARY KEY (NUM_PATIENT)
);

CREATE TABLE MEDECIN (
	NUM_MED		 INTEGER,
	SPECIALITE 	 VARCHAR2(30),
	CONSTRAINT PK_NUM_MED PRIMARY KEY (NUM_MED),
	CONSTRAINT FK_NUM_MED FOREIGN KEY (NUM_MED)
	REFERENCES EMPLOYE (NUM_EMP),
	CONSTRAINT CHK_SPECIALITE CHECK (SPECIALITE IN (
	'Anesthesiste','Cardiologue','Generaliste',
	'Orthopediste','Radiologue','Traumatologue','Pneumologue'))
);

CREATE TABLE SOIGNE (
	NUM_PATIENT		 INTEGER,
	NUM_MED			 INTEGER,
	CONSTRAINT PK_NUM_PATIENT_MED PRIMARY KEY (NUM_PATIENT,NUM_MED),
	CONSTRAINT FK_NUM_PATIENT FOREIGN KEY (NUM_PATIENT)
	REFERENCES PATIENT (NUM_PATIENT),
	CONSTRAINT FK_NUM_MED_SOIGNE FOREIGN KEY (NUM_MED)
	REFERENCES MEDECIN (NUM_MED)
);

CREATE TABLE SERVICE (
	CODE_SERVICE	 VARCHAR2(20),
	NOM_SERVICE 	 VARCHAR2(50),
	BATIMENT		 VARCHAR2(10),
	DIRECTEUR 		 INTEGER,
	CONSTRAINT PK_CODE_SERVICE PRIMARY KEY (CODE_SERVICE),
	CONSTRAINT FK_DIRECTEUR FOREIGN KEY (DIRECTEUR)
	REFERENCES MEDECIN (NUM_MED),
	CONSTRAINT UNQ_NOM_SERVICE UNIQUE (NOM_SERVICE)
);

CREATE TABLE INFIRMIER (
	NUM_INF			 INTEGER,
	CODE_SERVICE 	 VARCHAR2(20),
	ROTATION		 VARCHAR2(15),
	SALAIRE 		 FLOAT,
	CONSTRAINT PK_NUM_INF PRIMARY KEY (NUM_INF),
	CONSTRAINT FK_NUM_INF FOREIGN KEY (NUM_INF)
	REFERENCES EMPLOYE (NUM_EMP),
	CONSTRAINT FK_CODE_SERVICE FOREIGN KEY (CODE_SERVICE)
	REFERENCES SERVICE (CODE_SERVICE),
	CONSTRAINT CHK_ROTATION CHECK (ROTATION IN ('JOUR','NUIT'))
);

CREATE TABLE CHAMBRE (
	CODE_SERVICE 	 VARCHAR2(20),
	NUM_CHAMBRE 	 INTEGER,
	SURVEILLANT		 INTEGER,
	NB_LITS			 INTEGER,
	CONSTRAINT PK_CODE_SERVIC_NUM_CHAMBRE PRIMARY KEY (CODE_SERVICE,NUM_CHAMBRE),
	CONSTRAINT FK_CODE_SERVICE_CHAMBRE FOREIGN KEY (CODE_SERVICE) 
	REFERENCES SERVICE (CODE_SERVICE),
	CONSTRAINT FK_SURVEILLANT FOREIGN KEY (SURVEILLANT)
	REFERENCES INFIRMIER (NUM_INF)
);

CREATE TABLE HOSPITALISATION (
	NUM_PATIENT 	 INTEGER,
	CODE_SERVICE 	 VARCHAR2(20),
	NUM_CHAMBRE 	 INTEGER,
	LIT				 INTEGER,
	CONSTRAINT PK_NUM_PATIENT_HOSPITALISATION PRIMARY KEY (NUM_PATIENT),
	CONSTRAINT FK_NUM_PATIENT_HOSPITALISATION FOREIGN KEY (NUM_PATIENT)
	REFERENCES PATIENT (NUM_PATIENT),
	CONSTRAINT FK_CODE_SERVICE_NUM_CHAMBRE FOREIGN KEY (CODE_SERVICE,NUM_CHAMBRE)
	REFERENCES CHAMBRE (CODE_SERVICE,NUM_CHAMBRE)
);

--6)
DESC HOSPITALISATION;

ALTER TABLE HOSPITALISATION
ADD DATE_HOST DATE ;

DESC HOSPITALISATION;

ALTER TABLE HOSPITALISATION 
DROP COLUMN DATE_HOST;


--7)
DESC INFIRMIER;

ALTER TABLE INFIRMIER
ADD CONSTRAINT NT_NLL_SALAIRE CHECK (SALAIRE IS NOT NULL);

DESC INFIRMIER;

DESC PATIENT;

ALTER TABLE PATIENT
ADD CONSTRAINT NT_NLL_MUTUELLE CHECK (MUTUELLE IS NOT NULL);

DESC PATIENT;
--8)
DESC PATIENT;

ALTER TABLE PATIENT 
MODIFY PRENOM_PATIENT VARCHAR2(100);

DESC PATIENT;
--9)
DESC EMPLOYE;

ALTER TABLE EMPLOYE
DROP COLUMN TEL_EMP;

DESC EMPLOYE;

ALTER TABLE EMPLOYE
ADD TEL_EMP VARCHAR2(15);

DESC EMPLOYE;

--10)
DESC PATIENT;

ALTER TABLE PATIENT 
RENAME COLUMN ADRESSE_PATIENT 
TO adr_pat;

DESC PATIENT;

ALTER TABLE PATIENT 
RENAME COLUMN adr_pat 
TO ADRESSE_PATIENT ;
--11)

ALTER TABLE INFIRMIER
ADD CONSTRAINT CHK_SALAIRE CHECK (SALAIRE BETWEEN 10000 AND 30000);

--12)
ALTER TABLE MEDECIN
ADD CONSTRAINT NT_NLL_SPECIALITE CHECK (SPECIALITE IS NOT NULL);

--13)
/*
SQL LOADER
*/


--14)
SELECT e.NOM_EMP , e.PRENOM_EMP
FROM SERVICE s , EMPLOYE e
WHERE s.NOM_SERVICE = 'Cardiologie'
AND   s.DIRECTEUR = e.NUM_EMP;

UPDATE SERVICE
SET DIRECTEUR = (
SELECT m.NUM_MED 
FROM MEDECIN m , EMPLOYE e
WHERE m.NUM_MED = e.NUM_EMP
AND   m.SPECIALITE = 'Cardiologue'
AND   e.NOM_EMP =  'BOULARAS'
AND   e.PRENOM_EMP = 'Fatima')
WHERE NOM_SERVICE = 'Cardiologie';


SELECT e.NOM_EMP , e.PRENOM_EMP
FROM SERVICE s , EMPLOYE e
WHERE s.NOM_SERVICE = 'Cardiologie'
AND   s.DIRECTEUR = e.NUM_EMP;

--15)
ALTER TABLE INFIRMIER
DISABLE CONSTRAINT CHK_SALAIRE;

UPDATE INFIRMIER 
SET SALAIRE = SALAIRE - 5000
WHERE ROTATION = 'JOUR';


ALTER TABLE INFIRMIER
ENABLE CONSTRAINT CHK_SALAIRE;
/*
ERROR at line 2:
ORA-02293: cannot validate (DBHOPITAL.CHK_SALAIRE) - check constraint violated
*/

--16)
DELETE FROM MEDECIN
WHERE SPECIALITE = 'Cardiologue';

/* Problème rencontré : 
ERROR at line 1:
ORA-02292: integrity constraint (DBHOPITAL.FK_DIRECTEUR) violated - child
record found
*/

--17)
/*il faut créer un index secondaire sur l'attribut specialite*/
CREATE INDEX INDEX_SPECIALITE
ON MEDECIN (SPECIALITE);

--18)
SELECT NOM_PATIENT , PRENOM_PATIENT , MUTUELLE
FROM PATIENT
WHERE MUTUELLE = 'MAAF';

--19)
SELECT  h.LIT , h.NUM_CHAMBRE , s.NOM_SERVICE , p.NOM_PATIENT , p.PRENOM_PATIENT , p.MUTUELLE 
FROM HOSPITALISATION h , SERVICE s , PATIENT p
WHERE  h.CODE_SERVICE = s.CODE_SERVICE
AND	   p.NUM_PATIENT = h.NUM_PATIENT
AND    s.BATIMENT = 'B'
AND    p.MUTUELLE LIKE 'MN%'
ORDER BY LIT;

--20)
SELECT s.NUM_PATIENT , COUNT(s.NUM_MED) , COUNT(DISTINCT m.SPECIALITE)
FROM MEDECIN m , SOIGNE s
WHERE m.NUM_MED = s.NUM_MED
GROUP BY s.NUM_PATIENT 
HAVING(COUNT(s.NUM_MED)>3) ;

--21)
SELECT s.CODE_SERVICE  , AVG(i.SALAIRE)
FROM SERVICE s , INFIRMIER i
WHERE i.CODE_SERVICE = s.CODE_SERVICE
GROUP BY s.CODE_SERVICE ;

--22)
SELECT s.CODE_SERVICE , COUNT(DISTINCT i.NUM_INF)/COUNT(DISTINCT h.NUM_PATIENT) 
FROM HOSPITALISATION h , INFIRMIER i , SERVICE s
WHERE h.CODE_SERVICE = s.CODE_SERVICE 
AND   i.CODE_SERVICE = s.CODE_SERVICE
GROUP BY s.CODE_SERVICE ;

--23)
SELECT NUM_MED
FROM SOIGNE 
WHERE NUM_PATIENT IN 
	(SELECT NUM_PATIENT
	 FROM HOSPITALISATION 
	 GROUP BY NUM_PATIENT
	 HAVING (COUNT( CODE_SERVICE)=
	 (SELECT COUNT(*)
	  FROM SERVICE
)));

COMMIT;
