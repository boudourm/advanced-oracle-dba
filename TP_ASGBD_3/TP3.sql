
/*==============================================================*/
/* SCRIPT : TP ORACLE 3                                         */
/*==============================================================*/

--1)
connect SYSTEM/pwd;
	
SELECT * FROM DICT;
/*Nombre d'instances = 2551 rows selected.*/
DESC DICT;
/*structure = 
 Name                                      Null?    Type
 ------------------------------ ----------- -------- ----------------------------
 TABLE_NAME                                         VARCHAR2(30)
 COMMENTS                                           VARCHAR2(4000)*/
 
--2)

--ALL_TAB_COLUMNS
SELECT COMMENTS AS ROLE_DE_ALL_TAB_COLUMNS
FROM   DICT
WHERE TABLE_NAME = 'ALL_TAB_COLUMNS';
/*Columns of user's tables, views and clusters*/

--USER_USERS
SELECT COMMENTS AS ROLE_DE_USER_USERS
FROM   DICT
WHERE TABLE_NAME = 'USER_USERS';
/*Information about the current user*/

--ALL_CONSTRAINTS
SELECT COMMENTS AS ROLE_DE_ALL_CONSTRAINTS
FROM   DICT
WHERE TABLE_NAME = 'ALL_CONSTRAINTS';
/*Constraint definitions on accessible tables*/

--USER_TAB_PRIVS
SELECT COMMENTS AS ROLE_DE_USER_TAB_PRIVS
FROM   DICT
WHERE TABLE_NAME = 'USER_TAB_PRIVS';
/*Grants on objects for which the user is the owner, grantor or grantee*/ 

--3)

/*Trouver le nom d’utilisateur avec lequel vous êtes connecté ?
  Réponse : le nom de l'utilisateur est une donnée qui concerne 
			le USER donc elle deverait se trouver dans "USER_USERS"
			d'après (Q2).
			Alors : on fait un DESC USER_USERS pour trouver la 
					colonne corespondante puis un SELECT 
					sur cette colonne*/
DESC USER_USERS;

SELECT USERNAME FROM USER_USERS;
/*SYSTEM*/

--4)
--Comparer la structure

----------------------------------------------------------
--STRUCTURE DE ALL_TAB_COLUMNS
----------------------------------------------------------
DESC ALL_TAB_COLUMNS;

----------------------------------------------------------
--STRUCTURE DE USER_TAB_COLUMNS
----------------------------------------------------------
DESC USER_TAB_COLUMNS;

/*Structure(ALL_TAB_COLUMNS) = Structure(USER_TAB_COLUMNS) + [ OWNER  VARCHAR2(30) NOT NULL ]*/


--Comparer le contenu 

----------------------------------------------------------
--CONTENU DE USER_TAB_COLUMNS
----------------------------------------------------------
SELECT TABLE_NAME ,COLUMN_NAME FROM USER_TAB_COLUMNS;


----------------------------------------------------------
--CONTENU DE ALL_TAB_COLUMNS
----------------------------------------------------------
SELECT OWNER,TABLE_NAME ,COLUMN_NAME FROM ALL_TAB_COLUMNS;

/*USER_TAB_COLUMNS: contient les infos de toute les colonnes des table du USER courant (soit SYSTEM).
  ALL_TAB_COLUMNS:  contient les infos de toute les colonnes des table accessible par  le USER courant 
				   avec en plus precision du propriétaire de la table via le champ OWNER.*/

/* Du coup Nombre(Lignes de ALL_TAB_COLUMNS) >>> Nombre(Lignes de USER_TAB_COLUMNS)
   Executons un COUNT(*) afin de mieux cerner la diference entre les 2 Tables :*/				   
	SELECT COUNT(*) AS COLONNES_DU_USER_COURANT FROM USER_TAB_COLUMNS;

	SELECT OWNER , COUNT(*) AS NB_COLUMNS FROM ALL_TAB_COLUMNS GROUP BY OWNER ORDER BY NB_COLUMNS;

/* Ainsi : Contenu(USER_TAB_COLUMNS) est inclu dans le Contenu(ALL_TAB_COLUMNS) 
   et pour preuve le requête suivante retourne zero ligne*/
(SELECT TABLE_NAME ,COLUMN_NAME FROM USER_TAB_COLUMNS)
MINUS
(SELECT TABLE_NAME ,COLUMN_NAME FROM ALL_TAB_COLUMNS
WHERE OWNER = (SELECT USERNAME FROM USER_USERS));

--5)
SELECT TABLE_NAME 
FROM ALL_TABLES
WHERE OWNER = 'DBHOPITAL';

/*TABLE_NAME
------------------------------
INFIRMIER
CHAMBRE
EMPLOYE
PATIENT
MEDECIN
SOIGNE
SERVICE
HOSPITALISATION

8 rows selected.
les tables du TP1 ont été réellement créées*/

/*toutes les informations sur ces tables*/
SELECT * 
FROM ALL_TABLES
WHERE OWNER = 'DBHOPITAL';

--6)
SELECT OWNER,TABLE_NAME 
FROM  ALL_TABLES
WHERE OWNER = 'SYSTEM'
OR    OWNER = 'DBHOPITAL'
ORDER BY OWNER;

--7)
connect DBHOPITAL/pwd;

SELECT * 
FROM USER_TAB_COLUMNS
WHERE TABLE_NAME = 'PATIENT';

SELECT * 
FROM USER_TAB_COLUMNS
WHERE TABLE_NAME = 'HOSPITALISATION';

--8)
connect SYSTEM/pwd;

/*On execute un SELECT sur la table ALL_CONSTRAINTS 
  de manière à afficher les contraintes de clé étrangère 
  (cad CONSTRAINT_TYPE = 'R') appartenant à HOSPITALISATION
   ou PATIENT qui reference une clé primaire ou un attribut
   UNIQUE de PATIENT ou HOSPITALISATION (respectivement) 
   (R_CONSTRAINT_NAME appartient à l'autre table) */

SELECT  CONSTRAINT_NAME,CONSTRAINT_TYPE ,TABLE_NAME,R_OWNER,R_CONSTRAINT_NAME
FROM ALL_CONSTRAINTS
WHERE OWNER = 'DBHOPITAL'
AND   TABLE_NAME IN ('PATIENT' , 'HOSPITALISATION')
AND   CONSTRAINT_TYPE = 'R'
AND R_CONSTRAINT_NAME IN
(SELECT CONSTRAINT_NAME 
FROM ALL_CONSTRAINTS
WHERE OWNER = 'DBHOPITAL'
AND   CONSTRAINT_TYPE IN ('P' , 'U')
AND   TABLE_NAME IN ('PATIENT' , 'HOSPITALISATION'));

/*
CONSTRAINT_NAME                C TABLE_NAME
------------------------------ - ------------------------------
R_OWNER
--------------------------------------------------------------------------------
R_CONSTRAINT_NAME
------------------------------
FK_NUM_PATIENT_HOSPITALISATION R HOSPITALISATION
DBHOPITAL
PK_NUM_PATIENT*/
--9)
connect DBHOPITAL/pwd 

SELECT * FROM USER_CONSTRAINTS;

--10)

/*Attributs*/
SELECT COLUMN_NAME, DATA_TYPE, DATA_LENGTH, NULLABLE ,COLUMN_ID                            
FROM USER_TAB_COLUMNS                                                                         
WHERE TABLE_NAME = 'HOSPITALISATION';


SET SERVEROUTPUT ON;
BEGIN
   DBMS_OUTPUT.PUT_LINE(DBMS_METADATA.GET_DDL( OBJECT_TYPE => 'TABLE', NAME => 'HOSPITALISATION'));
END;
--11)
connect ADMINHOPITAL/pwd;

DESC USER_TAB_PRIVS;

SELECT * 
FROM USER_TAB_PRIVS 
WHERE  GRANTEE = 'ADMINHOPITAL';

--12)
connect ADMINHOPITAL/pwd;

SELECT USERNAME , GRANTED_ROLE
FROM USER_ROLE_PRIVS;

--13)
SELECT * FROM USER_OBJECTS ;


--14)
connect SYSTEM/pwd;

SELECT OWNER FROM ALL_TABLES WHERE TABLE_NAME = 'HOSPITALISATION';

--15)
connect DBHOPITAL/pwd

SELECT BYTES/1000 TAILLE_DE_HOSPITALISATION
FROM USER_EXTENTS
WHERE SEGMENT_NAME = 'HOSPITALISATION';

--16)

/*
connect SYSTEM/pwd

DROP USER DBHOPITAL CASCADE;

--1)

DROP TABLESPACE HOPITAL_TBS INCLUDING CONTENTS AND DATAFILES CASCADE CONSTRAINTS;

CREATE TABLESPACE HOPITAL_TBS
DATAFILE 'C:\Users\Moflawer\Desktop\Dol_Gul_Dur\WorkShop_Tree\SQL\Almost_Done\TP_ASGBD\TP_ASGBD_1\htbs_datafile.dat'
SIZE 100M AUTOEXTEND ON;

DROP TABLESPACE HOPITAL_TempTBS INCLUDING CONTENTS AND DATAFILES CASCADE CONSTRAINTS;

CREATE TEMPORARY TABLESPACE HOPITAL_TempTBS
TEMPFILE 'C:\Users\Moflawer\Desktop\Dol_Gul_Dur\WorkShop_Tree\SQL\Almost_Done\TP_ASGBD\TP_ASGBD_1\htbs_tempfile.dat'
SIZE 100M AUTOEXTEND ON;

--2)
CREATE USER DBHOPITAL 
IDENTIFIED BY pwd
DEFAULT TABLESPACE HOPITAL_TBS
TEMPORARY TABLESPACE HOPITAL_TempTBS;

--3)
GRANT ALL PRIVILEGES TO DBHOPITAL;
*/

/*On Suppose qu'on démmare de zero et qu'aucune Table n'est créée dans DBHOPITAL*/
connect DBHOPITAL/pwd


--Catalogue USER_TABLES ,USER_TAB_COLUMNS ,USER_CONSTRAINTS AVANT LES COMMANDES DDL*/
SELECT TABLE_NAME 
FROM   USER_TABLES ;

SELECT COLUMN_NAME , TABLE_NAME 
FROM USER_TAB_COLUMNS;

SELECT CONSTRAINT_NAME , CONSTRAINT_TYPE
FROM USER_CONSTRAINTS;

--Commande DDL 1 
CREATE TABLE EMPLOYE (
	NUM_EMP		 INTEGER,
	NOM_EMP		 VARCHAR2(50),
	PRENOM_EMP	 VARCHAR2(50),
	ADRESSE_EMP	 VARCHAR2(120),
	TEL_EMP		 VARCHAR2(20),
	CONSTRAINT PK_NUM_EMP PRIMARY KEY (NUM_EMP)
);

--Catalogue USER_TABLES ,USER_TAB_COLUMNS ,USER_CONSTRAINTS APRES COMMANDE DDL1*/
SELECT TABLE_NAME 
FROM   USER_TABLES ;

SELECT COLUMN_NAME , TABLE_NAME 
FROM USER_TAB_COLUMNS;

SELECT CONSTRAINT_NAME , CONSTRAINT_TYPE
FROM USER_CONSTRAINTS;

--Commande DDL 2
CREATE TABLE PATIENT (
	NUM_PATIENT	 INTEGER,
	NOM_PATIENT		 VARCHAR2(50),
	PRENOM_PATIENT	 VARCHAR2(50),
	ADRESSE_PATIENT	 VARCHAR2(120),
	TEL_PATIENT		 VARCHAR2(20),
	MUTUELLE 		 VARCHAR2(10),
	CONSTRAINT PK_NUM_PATIENT PRIMARY KEY (NUM_PATIENT)
);

--Catalogue USER_TABLES ,USER_TAB_COLUMNS ,USER_CONSTRAINTS APRES COMMANDE DDL 2*/
SELECT TABLE_NAME 
FROM   USER_TABLES ;

SELECT COLUMN_NAME , TABLE_NAME 
FROM USER_TAB_COLUMNS;

SELECT CONSTRAINT_NAME , CONSTRAINT_TYPE
FROM USER_CONSTRAINTS;

--Commande DDL 3 
CREATE TABLE MEDECIN (
	NUM_MED		 INTEGER,
	SPECIALITE 	 VARCHAR2(30),
	CONSTRAINT PK_NUM_MED PRIMARY KEY (NUM_MED),
	CONSTRAINT FK_NUM_MED FOREIGN KEY (NUM_MED)
	REFERENCES EMPLOYE (NUM_EMP),
	CONSTRAINT CHK_SPECIALITE CHECK (SPECIALITE IN (
	'Anesthesiste','Cardiologue','Generaliste',
	'Orthopediste','Radiologue','Traumatologue','Pneumologue'))
);

--Catalogue USER_TABLES ,USER_TAB_COLUMNS ,USER_CONSTRAINTS APRES COMMANDE DDL3*/
SELECT TABLE_NAME 
FROM   USER_TABLES ;

SELECT COLUMN_NAME , TABLE_NAME 
FROM USER_TAB_COLUMNS;

SELECT CONSTRAINT_NAME , CONSTRAINT_TYPE
FROM USER_CONSTRAINTS;


--Commande DDL 4 
CREATE TABLE SOIGNE (
	NUM_PATIENT		 INTEGER,
	NUM_MED			 INTEGER,
	CONSTRAINT PK_NUM_PATIENT_MED PRIMARY KEY (NUM_PATIENT,NUM_MED),
	CONSTRAINT FK_NUM_PATIENT FOREIGN KEY (NUM_PATIENT)
	REFERENCES PATIENT (NUM_PATIENT),
	CONSTRAINT FK_NUM_MED_SOIGNE FOREIGN KEY (NUM_MED)
	REFERENCES MEDECIN (NUM_MED)
);

--Catalogue USER_TABLES ,USER_TAB_COLUMNS ,USER_CONSTRAINTS APRES COMMANDE DDL 4*/
SELECT TABLE_NAME 
FROM   USER_TABLES ;

SELECT COLUMN_NAME , TABLE_NAME 
FROM USER_TAB_COLUMNS;

SELECT CONSTRAINT_NAME , CONSTRAINT_TYPE
FROM USER_CONSTRAINTS;


--Commande DDL 5
CREATE TABLE SERVICE (
	CODE_SERVICE	 VARCHAR2(20),
	NOM_SERVICE 	 VARCHAR2(50),
	BATIMENT		 VARCHAR2(10),
	DIRECTEUR 		 INTEGER,
	CONSTRAINT PK_CODE_SERVICE PRIMARY KEY (CODE_SERVICE),
	CONSTRAINT FK_DIRECTEUR FOREIGN KEY (DIRECTEUR)
	REFERENCES MEDECIN (NUM_MED),
	CONSTRAINT UNQ_NOM_SERVICE UNIQUE (NOM_SERVICE)
);

--Catalogue USER_TABLES ,USER_TAB_COLUMNS ,USER_CONSTRAINTS APRES COMMANDE DDL*/
SELECT TABLE_NAME 
FROM   USER_TABLES ;

SELECT COLUMN_NAME , TABLE_NAME 
FROM USER_TAB_COLUMNS;

SELECT CONSTRAINT_NAME , CONSTRAINT_TYPE
FROM USER_CONSTRAINTS;


--Commande DDL 6 
CREATE TABLE INFIRMIER (
	NUM_INF			 INTEGER,
	CODE_SERVICE 	 VARCHAR2(20),
	ROTATION		 VARCHAR2(15),
	SALAIRE 		 FLOAT,
	CONSTRAINT PK_NUM_INF PRIMARY KEY (NUM_INF),
	CONSTRAINT FK_NUM_INF FOREIGN KEY (NUM_INF)
	REFERENCES EMPLOYE (NUM_EMP),
	CONSTRAINT FK_CODE_SERVICE FOREIGN KEY (CODE_SERVICE)
	REFERENCES SERVICE (CODE_SERVICE),
	CONSTRAINT CHK_ROTATION CHECK (ROTATION IN ('JOUR','NUIT'))
);

--Catalogue USER_TABLES ,USER_TAB_COLUMNS ,USER_CONSTRAINTS APRES COMMANDE DDL 6*/
SELECT TABLE_NAME 
FROM   USER_TABLES ;

SELECT COLUMN_NAME , TABLE_NAME 
FROM USER_TAB_COLUMNS;

SELECT CONSTRAINT_NAME , CONSTRAINT_TYPE
FROM USER_CONSTRAINTS;


--Commande DDL 7 
CREATE TABLE CHAMBRE (
	CODE_SERVICE 	 VARCHAR2(20),
	NUM_CHAMBRE 	 INTEGER,
	SURVEILLANT		 INTEGER,
	NB_LITS			 INTEGER,
	CONSTRAINT PK_CODE_SERVIC_NUM_CHAMBRE PRIMARY KEY (CODE_SERVICE,NUM_CHAMBRE),
	CONSTRAINT FK_CODE_SERVICE_CHAMBRE FOREIGN KEY (CODE_SERVICE) 
	REFERENCES SERVICE (CODE_SERVICE),
	CONSTRAINT FK_SURVEILLANT FOREIGN KEY (SURVEILLANT)
	REFERENCES INFIRMIER (NUM_INF)
);

--Catalogue USER_TABLES ,USER_TAB_COLUMNS ,USER_CONSTRAINTS APRES COMMANDE DDL 6*/
SELECT TABLE_NAME 
FROM   USER_TABLES ;

SELECT COLUMN_NAME , TABLE_NAME 
FROM USER_TAB_COLUMNS;

SELECT CONSTRAINT_NAME , CONSTRAINT_TYPE
FROM USER_CONSTRAINTS;


--Commande DDL 7
CREATE TABLE HOSPITALISATION (
	NUM_PATIENT 	 INTEGER,
	CODE_SERVICE 	 VARCHAR2(20),
	NUM_CHAMBRE 	 INTEGER,
	LIT				 INTEGER,
	CONSTRAINT PK_NUM_PATIENT_HOSPITALISATION PRIMARY KEY (NUM_PATIENT),
	CONSTRAINT FK_NUM_PATIENT_HOSPITALISATION FOREIGN KEY (NUM_PATIENT)
	REFERENCES PATIENT (NUM_PATIENT),
	CONSTRAINT FK_CODE_SERVICE_NUM_CHAMBRE FOREIGN KEY (CODE_SERVICE,NUM_CHAMBRE)
	REFERENCES CHAMBRE (CODE_SERVICE,NUM_CHAMBRE)
);

--Catalogue USER_TABLES ,USER_TAB_COLUMNS ,USER_CONSTRAINTS APRES COMMANDE DDL 7*/
SELECT TABLE_NAME 
FROM   USER_TABLES ;

SELECT COLUMN_NAME , TABLE_NAME 
FROM USER_TAB_COLUMNS;

SELECT CONSTRAINT_NAME , CONSTRAINT_TYPE
FROM USER_CONSTRAINTS;


---------------------------------------------------------------------------------------
--Catalogue USER_TAB_COLUMNS  AVANT COMMANDE DDL 8*/

SELECT COLUMN_NAME , TABLE_NAME 
FROM USER_TAB_COLUMNS
WHERE  TABLE_NAME = 'HOSPITALISATION';

--Commande DDL 8
ALTER TABLE HOSPITALISATION
ADD DATE_HOST DATE ;

--Catalogue USER_TAB_COLUMNS  APRES COMMANDE DDL 8*/
SELECT COLUMN_NAME , TABLE_NAME 
FROM USER_TAB_COLUMNS
WHERE  TABLE_NAME = 'HOSPITALISATION';
 --------------------------------------------------------------------------------------
 --Catalogue USER_TABLES ,USER_TAB_COLUMNS ,USER_CONSTRAINTS AVANT LA COMMANDE DDL 9*/

SELECT CONSTRAINT_NAME , CONSTRAINT_TYPE
FROM USER_CONSTRAINTS
WHERE TABLE_NAME = 'PATIENT';

--Commande DDL 9 
ALTER TABLE PATIENT
ADD CONSTRAINT NT_NLL_MUTUELLE CHECK (MUTUELLE IS NOT NULL);
--Catalogue USER_CONSTRAINTS APRES COMMANDE DDL 9
SELECT CONSTRAINT_NAME , CONSTRAINT_TYPE
FROM USER_CONSTRAINTS
WHERE TABLE_NAME = 'PATIENT';


-----------------------------------------------------------------------------------------
--Catalogue USER_TAB_COLUMNS  AVANT LA COMMANDE DDL 10*/
SELECT COLUMN_NAME ,DATA_TYPE,DATA_LENGTH, TABLE_NAME 
FROM USER_TAB_COLUMNS
WHERE TABLE_NAME = 'PATIENT'
AND COLUMN_NAME = 'PRENOM_PATIENT';


--Commande DDL 10 
ALTER TABLE PATIENT 
MODIFY PRENOM_PATIENT VARCHAR2(100);

--Catalogue USER_TAB_COLUMNS  APRES LA COMMANDE DDL 10*/
SELECT COLUMN_NAME ,DATA_TYPE,DATA_LENGTH, TABLE_NAME 
FROM USER_TAB_COLUMNS
WHERE TABLE_NAME = 'PATIENT'
AND COLUMN_NAME = 'PRENOM_PATIENT';


-----------------------------------------------------------------------------------------
--Catalogue USER_TAB_COLUMNS AVANT LA COMMANDE DDL 11*/

SELECT COLUMN_NAME , TABLE_NAME 
FROM USER_TAB_COLUMNS
WHERE TABLE_NAME = 'EMPLOYE';

--Commande DDL 11
ALTER TABLE EMPLOYE
DROP COLUMN TEL_EMP;

--Catalogue USER_TAB_COLUMNS  APRES COMMANDE DDL 11*/
SELECT COLUMN_NAME , TABLE_NAME 
FROM USER_TAB_COLUMNS
WHERE TABLE_NAME = 'EMPLOYE';

-----------------------------------------------------------------------------------------
--Catalogue USER_TAB_COLUMNS  AVANT LA COMMANDE DDL 12*/
SELECT COLUMN_NAME , TABLE_NAME 
FROM USER_TAB_COLUMNS
WHERE TABLE_NAME = 'PATIENT';

--Commande DDL 12 
ALTER TABLE PATIENT 
RENAME COLUMN ADRESSE_PATIENT 
TO adr_pat;

--Catalogue USER_TAB_COLUMNS  APRES COMMANDE DDL 12*/
SELECT COLUMN_NAME , TABLE_NAME 
FROM USER_TAB_COLUMNS
WHERE TABLE_NAME = 'PATIENT';

 --------------------------------------------------------------------------------------
 --Catalogue USER_CONSTRAINTS AVANT LA COMMANDE DDL 13*/
SELECT CONSTRAINT_NAME , CONSTRAINT_TYPE
FROM USER_CONSTRAINTS
WHERE TABLE_NAME = 'INFIRMIER';

--Commande DDL 13
ALTER TABLE INFIRMIER
ADD CONSTRAINT CHK_SALAIRE CHECK (SALAIRE BETWEEN 10000 AND 30000);

--Catalogue USER_CONSTRAINTS APRES COMMANDE DDL 13*/
SELECT CONSTRAINT_NAME , CONSTRAINT_TYPE
FROM USER_CONSTRAINTS
WHERE TABLE_NAME = 'INFIRMIER';

 --------------------------------------------------------------------------------------
 --Catalogue USER_CONSTRAINTS AVANT LA COMMANDE DDL 14*/
SELECT CONSTRAINT_NAME , CONSTRAINT_TYPE
FROM USER_CONSTRAINTS
WHERE TABLE_NAME = 'MEDECIN';


--Commande DDL 14
ALTER TABLE MEDECIN
ADD CONSTRAINT NT_NLL_SPECIALITE CHECK (SPECIALITE IS NOT NULL);

--Catalogue USER_CONSTRAINTS APRES COMMANDE DDL 14*/
SELECT CONSTRAINT_NAME , CONSTRAINT_TYPE
FROM USER_CONSTRAINTS
WHERE TABLE_NAME = 'MEDECIN';

 --------------------------------------------------------------------------------------
 --Catalogue USER_CONSTRAINTS AVANT LA COMMANDE DDL 15*/
SELECT CONSTRAINT_NAME , CONSTRAINT_TYPE , STATUS
FROM USER_CONSTRAINTS
WHERE TABLE_NAME = 'INFIRMIER'
AND CONSTRAINT_NAME = 'CHK_SALAIRE';


--Commande DDL 15
ALTER TABLE INFIRMIER
DISABLE CONSTRAINT CHK_SALAIRE;

--Catalogue USER_CONSTRAINTS APRES COMMANDE DDL 15*/
SELECT CONSTRAINT_NAME , CONSTRAINT_TYPE , STATUS
FROM USER_CONSTRAINTS
WHERE TABLE_NAME = 'INFIRMIER'
AND CONSTRAINT_NAME = 'CHK_SALAIRE';

--Commande DDL 16
ALTER TABLE INFIRMIER
ENABLE CONSTRAINT CHK_SALAIRE;

--Catalogue USER_CONSTRAINTS APRES COMMANDE DDL 16*/
SELECT CONSTRAINT_NAME , CONSTRAINT_TYPE , STATUS
FROM USER_CONSTRAINTS
WHERE TABLE_NAME = 'INFIRMIER'
AND CONSTRAINT_NAME = 'CHK_SALAIRE';







CREATE TABLE "DBHOPITAL"."HOSPITALISATION"
("NUM_PATIENT" NUMBER(*,0),
 "CODE_SERVICE" VARCHAR2(20),
 "NUM_CHAMBRE" NUMBER(*,0),
 "LIT" NUMBER(*,0),
 "DATE_HOST" DATE,
 CONSTRAINT "PK_NUM_PATIENT_HOSPITALISATION" PRIMARY KEY("NUM_PATIENT")
 -- USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255
--STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
--PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE
--DEFAULT CELL_FLASH_CACHE DEFAULT) TABLESPACE "HOPITAL_TBS"  ENABLE,
CONSTRAINT "FK_NUM_PATIENT_HOSPITALISATION" FOREIGN KEY ("NUM_PATIENT")
REFERENCES "DBHOPITAL"."PATIENT" ("NUM_PATIENT") ENABLE,
CONSTRAINT "FK_CODE_SERVICE_NUM_CHAMBRE" FOREIGN KEY ("CODE_SERVICE", "NUM_CHAMBRE")
REFERENCES "DBHOPITAL"."CHAMBRE" ("CODE_SERVICE", "NUM_CHAMBRE") ENABLE )
/*SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS
2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "HOPITAL_TBS"*/


/*rétablir tt en ordre*/
@C:\Users\Moflawer\Desktop\Dol_Gul_Dur\WorkShop_Tree\SQL\Almost_Done\TP_ASGBD\TP_ASGBD_1\TP1.sql
@C:\Users\Moflawer\Desktop\Dol_Gul_Dur\WorkShop_Tree\SQL\Almost_Done\TP_ASGBD\TP_ASGBD_2\TP2.sql

