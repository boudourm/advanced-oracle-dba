
/*==============================================================*/
/* SCRIPT : TP ORACLE 5                                         */
/*==============================================================*/

connect SYSTEM/pwd

connect DBHOPITAL/pwd;

DROP TRIGGER AFFICHER_MAJ_INFIRMIER;
DROP TRIGGER AFFICHER_AFFECTATION_INFIRMIER;
DROP TRIGGER VERIF_CODE_SERVICE_INF;
DROP TRIGGER VERIF_SALAIRE_INF;
DROP TRIGGER TotalSalaire_Serivce_trigger;
DROP TRIGGER TotalSalaireUpdate_trigger;
DROP TRIGGER TotalSalChangerService_trigger;
DROP TRIGGER HIST_HOSPITALISATION_TRIGG;

--1)

CREATE OR REPLACE TRIGGER AFFICHER_MAJ_INFIRMIER
AFTER INSERT OR UPDATE OR DELETE ON INFIRMIER
FOR EACH ROW

BEGIN
	IF INSERTING THEN DBMS_OUTPUT.PUT_LINE('un nouveau employé de type infirmier est ajouté (N° '||:NEW.NUM_INF||').'); END IF;
	IF UPDATING THEN DBMS_OUTPUT.PUT_LINE('un employé de type infirmier a ete modifié (N° '||:NEW.NUM_INF||').'); END IF;
	IF DELETING THEN DBMS_OUTPUT.PUT_LINE('un employé de type infirmier a ete supprimé (N° '||:OLD.NUM_INF||').'); END IF;
END;
/

SET SERVEROUTPUT ON;
	INSERT INTO INFIRMIER VALUES  (99,'REA','JOUR',12560.78);
	UPDATE INFIRMIER SET ROTATION = 'NUIT' WHERE NUM_INF = 99;
	DELETE FROM INFIRMIER WHERE NUM_INF = 99;

--2)	

CREATE OR REPLACE TRIGGER AFFICHER_AFFECTATION_INFIRMIER
AFTER INSERT  ON INFIRMIER
FOR EACH ROW
DECLARE
s SERVICE.NOM_SERVICE%TYPE;
BEGIN
	SELECT NOM_SERVICE INTO s
	FROM SERVICE 
	WHERE CODE_SERVICE = :NEW.CODE_SERVICE;
	DBMS_OUTPUT.PUT_LINE('un nouveau infirmier est affecté au service : '||s||'.');
END;
/

SET SERVEROUTPUT ON;
INSERT INTO INFIRMIER VALUES  (99,'REA','JOUR',12560.78);
DELETE FROM INFIRMIER WHERE NUM_INF = 99;

--3)
CREATE OR REPLACE TRIGGER VERIF_CODE_SERVICE_INF
BEFORE UPDATE OF CODE_SERVICE ON INFIRMIER
FOR EACH ROW 

DECLARE 
NB_SELECTION INTEGER; 
BEGIN
	SELECT COUNT(*) INTO NB_SELECTION 
	FROM SERVICE WHERE CODE_SERVICE = :NEW.CODE_SERVICE;
	
	IF(NB_SELECTION <> 1) THEN 
		RAISE_APPLICATION_ERROR(-20000, 'Erreur : CODE_SERVICE = '||:NEW.CODE_SERVICE||' nexiste pas dans la table SERVICE.') ; 
	END IF;
	
END;
/

SET SERVEROUTPU ON;
UPDATE INFIRMIER SET CODE_SERVICE = 'PED' WHERE NUM_INF = 12;

--4)
CREATE OR REPLACE TRIGGER VERIF_SALAIRE_INF
BEFORE UPDATE OF SALAIRE ON INFIRMIER 
FOR EACH ROW 

BEGIN
	IF(:OLD.SALAIRE > :NEW.SALAIRE) THEN 
		RAISE_APPLICATION_ERROR(-20001, 'la nouvelle valeur ('||:NEW.SALAIRE||') ne peut jamais être inférieure à la précédente ('||:OLD.SALAIRE||').') ;
	END IF;
END;
/

SET SERVEROUTPUT ON;
UPDATE INFIRMIER SET SALAIRE = SALAIRE - 2000 ;

--5)
--a)
ALTER TABLE SERVICE
DROP COLUMN TOTAL_SALAIRE_SERVICE;

ALTER TABLE SERVICE
ADD TOTAL_SALAIRE_SERVICE FLOAT ;

UPDATE SERVICE 
SET TOTAL_SALAIRE_SERVICE = (
SELECT SUM(SALAIRE)
FROM INFIRMIER 
WHERE CODE_SERVICE = SERVICE.CODE_SERVICE);

--b)
CREATE OR REPLACE TRIGGER TotalSalaire_Serivce_trigger
AFTER INSERT ON INFIRMIER 
FOR EACH ROW 

BEGIN
	UPDATE SERVICE
	SET TOTAL_SALAIRE_SERVICE = TOTAL_SALAIRE_SERVICE + :NEW.SALAIRE
	WHERE CODE_SERVICE = :NEW.CODE_SERVICE;
END;
/

SELECT CODE_SERVICE , TOTAL_SALAIRE_SERVICE FROM SERVICE;

INSERT INTO INFIRMIER VALUES  (99,'REA','JOUR',10060.78);

SELECT CODE_SERVICE , TOTAL_SALAIRE_SERVICE FROM SERVICE;

DELETE FROM INFIRMIER WHERE NUM_INF = 99;

--c)
CREATE OR REPLACE TRIGGER TotalSalaireUpdate_trigger
AFTER UPDATE OF SALAIRE ON INFIRMIER 
FOR EACH ROW 

BEGIN
	UPDATE SERVICE
	SET TOTAL_SALAIRE_SERVICE = TOTAL_SALAIRE_SERVICE - :OLD.SALAIRE + :NEW.SALAIRE
	WHERE CODE_SERVICE = :NEW.CODE_SERVICE;
END;
/

INSERT INTO INFIRMIER VALUES  (99,'REA','JOUR',10060.78);

SELECT CODE_SERVICE , TOTAL_SALAIRE_SERVICE FROM SERVICE;

UPDATE INFIRMIER SET SALAIRE = SALAIRE + 500 WHERE NUM_INF = 99;

SELECT CODE_SERVICE , TOTAL_SALAIRE_SERVICE FROM SERVICE;

DELETE FROM INFIRMIER WHERE NUM_INF = 99;

--6)
CREATE OR REPLACE TRIGGER TotalSalChangerService_trigger
AFTER UPDATE OF CODE_SERVICE ON INFIRMIER 
FOR EACH ROW 

BEGIN
	UPDATE SERVICE
	SET TOTAL_SALAIRE_SERVICE = TOTAL_SALAIRE_SERVICE + :NEW.SALAIRE
	WHERE CODE_SERVICE = :NEW.CODE_SERVICE;
	
	UPDATE SERVICE
	SET TOTAL_SALAIRE_SERVICE = TOTAL_SALAIRE_SERVICE - :NEW.SALAIRE
	WHERE CODE_SERVICE = :OLD.CODE_SERVICE;
END;
/

INSERT INTO INFIRMIER VALUES  (99,'REA','JOUR',10060.78);

SELECT CODE_SERVICE , TOTAL_SALAIRE_SERVICE FROM SERVICE;

UPDATE INFIRMIER 
SET CODE_SERVICE = 'CAR'
WHERE NUM_INF = 99;

SELECT CODE_SERVICE , TOTAL_SALAIRE_SERVICE FROM SERVICE;

DELETE FROM INFIRMIER WHERE NUM_INF = 99;

--7)
CREATE TABLE HIST_HOSPIT (
	DATE_HOSPIT DATE,
	NUM_PATIENT INTEGER, 
	CODE_SERVICE VARCHAR2(20),
	CONSTRAINT PK_HIST_HOSPIT PRIMARY KEY (DATE_HOSPIT,NUM_PATIENT),
	CONSTRAINT FK_HIST_HOSPIT_SERVICE FOREIGN KEY (CODE_SERVICE) 
	REFERENCES SERVICE (CODE_SERVICE),
	CONSTRAINT FK_HIST_HOSPIT_PATIENT FOREIGN KEY (NUM_PATIENT) 
	REFERENCES PATIENT (NUM_PATIENT)
);


CREATE OR REPLACE TRIGGER HIST_HOSPITALISATION_TRIGG
AFTER INSERT ON HOSPITALISATION
FOR EACH ROW
BEGIN
	INSERT INTO HIST_HOSPIT VALUES (SYSDATE,:NEW.NUM_PATIENT,:NEW.CODE_SERVICE);
END;
/

SELECT * FROM HIST_HOSPIT;
INSERT INTO HOSPITALISATION VALUES (81,'CHG',401,1);
SELECT * FROM HIST_HOSPIT;

DELETE FROM HOSPITALISATION WHERE NUM_PATIENT= 81;






/*RESET*/
-- C:\Users\Moflawer\Desktop\Dol_Gul_Dur\WorkShop_Tree\SQL\Almost_Done\TP_ASGBD\RESET_DATABASE.bat

